# Add your code
datos=read.csv("people-example.csv", header=TRUE)
#Add your code
sort(datos$age)
#Add your code
sort(datos$age)
datos[order(datos$age),]
library(dplyr) #Data Manipulation
library(caTools) #Split Datasets
library(lattice) #Plots
library(ggplot2) #Plots
library(caret) #Machine Learning
library(rpart) #Decission Tree Algorithm
library(e1071) #Random Forest Algorithm
#library(ranger) #Random Forest Algorithm
library(kernlab) #Support Vector Machine
library(gridExtra)
library(GGally)
library(rpart.plot)
library(gmodels)
if (!require("corrplot")){ install.packages("corrplot"); library(corrplot)}
dataRRHH <- read.csv(file ="RecursosHumanos.csv", sep=",", header = TRUE)
nrow(dataRRHH)
head(dataRRHH)
any(is.na(dataRRHH))
#Vemos que no hay registros incompletos
#Antes de nada pasamos las variables que sean necesarias para adecuarla a su significado real
dataRRHH[,'left']<-factor(dataRRHH[,'left'])
dataRRHH[,'Work_accident']<-factor(dataRRHH[,'Work_accident'])
dataRRHH[,'promotion_last_5years']<-factor(dataRRHH[,'promotion_last_5years'])
dataRRHH
head(dataRRHH)
summary(dataRRHH)
ggplot(dataRRHH, aes(x=satisfaction_level))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
mean(dataRRHH$satisfaction_level)
menorque025<-dataRRHH[dataRRHH$satisfaction_level<=0.25,]
nrow(menorque025)
rangomay025men05<-dataRRHH[dataRRHH$satisfaction_level<=0.5 & dataRRHH$satisfaction_level>0.25,]
nrow(rangomay025men05)
mayorque05<-dataRRHH[dataRRHH$satisfaction_level>0.5,]
nrow(mayorque05)
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..,fill=salary), colour="black")
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..), fill="blue", colour="black")+
geom_density(colour="red") +facet_wrap( ~ salary,ncol=3)
mediahighdata<-dataRRHH[dataRRHH$salary=='high',]
mediahigh<-mean(mediahighdata$satisfaction_level)
mediahigh
mediamediumdata<-dataRRHH[dataRRHH$salary=='medium',]
mediamedium<-mean(mediamediumdata$satisfaction_level)
mediamedium
medialowdata<-dataRRHH[dataRRHH$salary=='low',]
medialow<-mean(medialowdata$satisfaction_level)
medialow
ggplot(dataRRHH, aes(x=number_project, y=satisfaction_level, color=left)) +
geom_point()
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..), fill="blue", colour="black")+
geom_density(colour="red") +facet_wrap( ~ number_project,ncol=3)
install.packages("ggdendro")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggdendro")
library(ggplot2)
library(ggplot2)
library(ggdendro)
dataClusters<-read.csv(file="Clusters.csv")
summary(dataClusters)
str(dataClusters)
head(dataClusters)
dataClusters<-read.csv(file="Clusters.csv")
summary(dataClusters)
str(dataClusters)
head(dataClusters)
nombres=c("X", "Y")
colnames(dataClusters)<-nombres
head(dataClusters)
str(dataClusters)
ggplot() +
geom_point(aes(x = X, y = Y), data = dataClusters, alpha = 0.5) +
ggtitle('Conjunto de Datos')
set.seed(123)
wcss <- vector()
for(i in 1:20){
wcss[i] <- sum(kmeans(dataClusters, i)$withinss)
}
ggplot() + geom_point(aes(x = 1:20, y = wcss), color = 'blue') +
geom_line(aes(x = 1:20, y = wcss), color = 'blue') +
ggtitle("Elbow method") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
set.seed(1234)
modeloKMeans <- kmeans(dataClusters, 7, iter.max = 1000)
set.seed(1234)
modeloKMeans <- kmeans(dataClusters, 7, iter.max = 1000)
modeloKMeans
dataClusters$cluster <- modeloKMeans$cluster
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = dataClusters, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_point(aes(x = modeloKMeans$centers[, 1], y = modeloKMeans$centers[, 2]), color = 'black', size = 3) +
ggtitle('Clusters de Datos con k = 7 / K-Means') +
xlab('X') + ylab('Y')
dendrograma <- hclust(dist(dataClusters, method = 'euclidean'), method = 'ward.D')
ggdendrogram(dendrograma, rotate = FALSE, labels = FALSE, theme_dendro = TRUE) +
labs(title = "Dendrograma")
modeloJerarquico <- hclust(dist(dataClusters, method = 'euclidean'), method = 'ward.D')
gruposModelo1 <- cutree(modeloJerarquico, k = 3)
dataClusters$cluster <- gruposModelo1
#Esa seleccion depende de la linea
modeloJerarquico <- hclust(dist(dataClusters, method = 'euclidean'), method = 'ward.D')
gruposModelo1 <- cutree(modeloJerarquico, k = 3)
#Que el arbol solo baje hasta 3 clusters
dataClusters$cluster <- gruposModelo1
#Esa seleccion depende de la linea
modeloJerarquico <- hclust(dist(dataClusters, method = 'euclidean'), method = 'ward.D')
gruposModelo1 <- cutree(modeloJerarquico, k = 3)
#Que el arbol solo baje hasta 3 clusters
dataClusters$cluster <- gruposModelo1
#Tenemos que ir viendo si esa agrupacion es correcta o no
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = dataClusters, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 3 / Agrupamiento Jer치rquico') +
xlab('X') + ylab('Y')
modelo2 <- cutree(modeloJerarquico, k = 4)
dataClusters$cluster <- modelo2
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = dataClusters, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 4 / Agrupamiento Jer치rquico') +
xlab('X') + ylab('Y')
modelo3 <- cutree(modeloJerarquico, k = 7)
dataClusters$cluster <- modelo3
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = dataClusters, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 7 / Agrupamiento Jer치rquico') +
xlab('X') + ylab('Y')
library(ggplot2)
library(dplyr)
library(gridExtra)
#Segmentar mercados y si eso priorizar alguno de ellos
#Queremos agrupar los clientes
dataClusters<-read.csv(file="Mall_customers.csv")
summary(dataClusters)
str(dataClusters)
head(dataClusters)
any(is.na(dataClusters))
ggplot(dataClusters, aes(x=dataClusters$Gender, color=dataClusters$Gender))+
geom_bar(stat="count", aes (fill=dataClusters$Gender))+
xlab("Mujeres y hombres") + ylab("Contador")+
geom_text(stat='count', aes(label=..count..), vjust=-0.5)
summary(dataClusters)
#minimo 18 a침os y maximo 70
ggplot(dataClusters, aes(x=Age))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
dataMujeres<-dataClusters[dataClusters$Gender=='Male', ]
dataHombres<-dataClusters[dataClusters$Gender=='Female', ]
nrow(dataMujeres)
nrow(dataHombres)
summary(dataMujeres)
summary(dataHombres)
#Segmentar mercados y si eso priorizar alguno de ellos
#Queremos agrupar los clientes
dataClusters<-read.csv(file="Mall_customers.csv")
summary(dataClusters)
str(dataClusters)
head(dataClusters)
any(is.na(dataClusters))
dataMujeres<-dataClusters[dataClusters$Gender=='Male', ]
dataHombres<-dataClusters[dataClusters$Gender=='Female', ]
summary(dataMujeres)
summary(dataHombres)
dataIncomePunt<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePunt<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot(dataRRHH, aes(x=number_project, y=satisfaction_level, color=left)) +
geom_point()
dataIncomePuntMuj<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePuntMuj<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePuntHom<-dataHombres[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot(dataRRHH, aes(x=number_project, y=satisfaction_level, color=left)) +
geom_point()
dataIncomePuntMuj<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePuntHom<-dataHombres[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot(dataIncomePuntMuj, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
ggplot(dataIncomePuntHom, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
#HISTOGRAMAS
ggplot(dataIncomePuntMuj, aes(x=Annual.Income..k..))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
dataIncomePuntMuj<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePuntHom<-dataHombres[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot(dataIncomePuntMuj, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
ggplot(dataIncomePuntHom, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
#HISTOGRAMAS
library(psych)
multi.hist(x = dataIncomePuntMuj, dcol = c("blue", "red"), dlty = c("dotted", "solid"))
multi.hist(x = dataIncomePuntHom, dcol = c("blue", "red"), dlty = c("dotted", "solid"))
dataIncomePuntMuj<-dataMujeres[,c('Annual.Income..k..','Spending.Score..1.100.')]
dataIncomePuntHom<-dataHombres[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot(dataIncomePuntMuj, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
ggplot(dataIncomePuntHom, aes(x=Annual.Income..k.., y=Spending.Score..1.100.)) +
geom_point()
#HISTOGRAMAS
library(psych)
multi.hist(x = dataIncomePuntMuj, dcol = c("blue", "red"), dlty = c("dotted", "solid"))
multi.hist(x = dataIncomePuntHom, dcol = c("blue", "red"), dlty = c("dotted", "solid"))
datasetCuster<-dataClusters[,c('Annual.Income..k..','Spending.Score..1.100.')]
datasetCluster<-dataClusters[,c('Annual.Income..k..','Spending.Score..1.100.')]
datasetCluster<-dataClusters[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot() +
geom_point(aes(x =Annual.Income..k.. , y =Spending.Score..1.100. ), data = datasetCluster, alpha = 0.5) +
ggtitle('Conjunto de Datos')
set.seed(123)
wcss <- vector()
for(i in 1:20){
wcss[i] <- sum(kmeans(datasetCluster, i)$withinss)
}
set.seed(123)
wcss <- vector()
for(i in 1:20){
wcss[i] <- sum(kmeans(datasetCluster, i)$withinss)
}
datasetCluster<-dataClusters[,c('Annual.Income..k..','Spending.Score..1.100.')]
ggplot() +
geom_point(aes(x =Annual.Income..k.. , y =Spending.Score..1.100. ), data = datasetCluster, alpha = 0.5) +
ggtitle('Conjunto de Datos')
set.seed(123)
wcss <- vector()
for(i in 1:20){
wcss[i] <- sum(kmeans(datasetCluster, i)$withinss)
}
ggplot() + geom_point(aes(x = 1:20, y = wcss), color = 'blue') +
geom_line(aes(x = 1:20, y = wcss), color = 'blue') +
ggtitle("Elbow method") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
set.seed(1234)
modeloKMeans <- kmeans(datasetCluster, 4, iter.max = 1000)
modeloKMeans
datasetCluster$cluster <- modeloKMeans$cluster
ggplot() + geom_point(aes(x =Annual.Income..k.. , y = Spending.Score..1.100., color = cluster), data = datasetCluster, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_point(aes(x = modeloKMeans$centers[, 1], y = modeloKMeans$centers[, 2]), color = 'black', size = 3) +
ggtitle('Clusters de Datos con k = 4 / K-Means') +
xlab('X') + ylab('Y')
set.seed(1234)
modeloKMeans <- kmeans(datasetCluster, 5, iter.max = 1000)
modeloKMeans
datasetCluster$cluster <- modeloKMeans$cluster
ggplot() + geom_point(aes(x =Annual.Income..k.. , y = Spending.Score..1.100., color = cluster), data = datasetCluster, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_point(aes(x = modeloKMeans$centers[, 1], y = modeloKMeans$centers[, 2]), color = 'black', size = 3) +
ggtitle('Clusters de Datos con k = 5 / K-Means') +
xlab('X') + ylab('Y')
set.seed(1234)
modeloKMeans <- kmeans(datasetCluster, 6, iter.max = 1000)
modeloKMeans
datasetCluster$cluster <- modeloKMeans$cluster
ggplot() + geom_point(aes(x =Annual.Income..k.. , y = Spending.Score..1.100., color = cluster), data = datasetCluster, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_point(aes(x = modeloKMeans$centers[, 1], y = modeloKMeans$centers[, 2]), color = 'black', size = 3) +
ggtitle('Clusters de Datos con k = 6 / K-Means') +
xlab('X') + ylab('Y')
set.seed(1234)
modeloKMeans <- kmeans(datasetCluster, 7, iter.max = 1000)
modeloKMeans
datasetCluster$cluster <- modeloKMeans$cluster
ggplot() + geom_point(aes(x =Annual.Income..k.. , y = Spending.Score..1.100., color = cluster), data = datasetCluster, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
geom_point(aes(x = modeloKMeans$centers[, 1], y = modeloKMeans$centers[, 2]), color = 'black', size = 3) +
ggtitle('Clusters de Datos con k = 7 / K-Means') +
xlab('X') + ylab('Y')
summary(dataClusters)
#minimo 18 a침os y maximo 70
ggplot(dataClusters, aes(x=Age))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
#Preparamos el dataset y como ya esta en factor lo dejamos as칤
empleadosvaliosos<-dataRRHH[dataRRHH$last_evaluation>=0.7 & dataRRHH$time_spend_company>=4 & dataRRHH$number_project>=5,]
head(empleadosvaliosos)
nrow(empleadosvaliosos)
Sys.setenv(LANG = "es")
library(dplyr) #Data Manipulation
library(caTools) #Split Datasets
library(lattice) #Plots
library(ggplot2) #Plots
library(caret) #Machine Learning
library(rpart) #Decission Tree Algorithm
library(e1071) #Random Forest Algorithm
#library(ranger) #Random Forest Algorithm
library(kernlab) #Support Vector Machine
library(gridExtra)
library(GGally)
library(rpart.plot)
library(gmodels)
if (!require("corrplot")){ install.packages("corrplot"); library(corrplot)}
dataRRHH <- read.csv(file ="RecursosHumanos.csv", sep=",", header = TRUE)
nrow(dataRRHH)
head(dataRRHH)
any(is.na(dataRRHH))
#Vemos que no hay registros incompletos
#Antes de nada pasamos las variables que sean necesarias para adecuarla a su significado real
dataRRHH[,'left']<-factor(dataRRHH[,'left'])
dataRRHH[,'Work_accident']<-factor(dataRRHH[,'Work_accident'])
dataRRHH[,'promotion_last_5years']<-factor(dataRRHH[,'promotion_last_5years'])
dataRRHH
head(dataRRHH)
summary(dataRRHH)
ggplot(dataRRHH, aes(x=satisfaction_level))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
mean(dataRRHH$satisfaction_level)
menorque025<-dataRRHH[dataRRHH$satisfaction_level<=0.25,]
nrow(menorque025)
rangomay025men05<-dataRRHH[dataRRHH$satisfaction_level<=0.5 & dataRRHH$satisfaction_level>0.25,]
nrow(rangomay025men05)
mayorque05<-dataRRHH[dataRRHH$satisfaction_level>0.5,]
nrow(mayorque05)
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..,fill=salary), colour="black")
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..), fill="blue", colour="black")+
geom_density(colour="red") +facet_wrap( ~ salary,ncol=3)
mediahighdata<-dataRRHH[dataRRHH$salary=='high',]
mediahigh<-mean(mediahighdata$satisfaction_level)
mediahigh
mediamediumdata<-dataRRHH[dataRRHH$salary=='medium',]
mediamedium<-mean(mediamediumdata$satisfaction_level)
mediamedium
medialowdata<-dataRRHH[dataRRHH$salary=='low',]
medialow<-mean(medialowdata$satisfaction_level)
medialow
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..,fill=left), colour="black")
ggplot(dataRRHH,aes(left,satisfaction_level)) + geom_boxplot(aes(fill=left))
ggplot(dataRRHH, aes(x=number_project, y=satisfaction_level, color=left)) +
geom_point()
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..), fill="blue", colour="black")+
geom_density(colour="red") +facet_wrap( ~ number_project,ncol=3)
dataRecursosnumeric<-dataRRHH[,c('satisfaction_level','last_evaluation','number_project','average_montly_hours','time_spend_company')]
correlacionnumericos<-round(cor(dataRecursosnumeric), 1)
library(corrplot)
corrplot(correlacionnumericos, method="number", type="lower")
ggplot(dataRRHH, aes(x=satisfaction_level))+
geom_histogram(aes(y=..density..), fill="blue", colour="black")+
geom_density(colour="red") +facet_wrap( ~ sales,ncol=3)
dataLeft<-dataRRHH[dataRRHH$left==1, ]
#Los que se van
dataStay<-dataRRHH[dataRRHH$left==0, ]
#Los que se quedan
nrow(dataLeft)
g1 = ggplot(dataLeft, aes(x=satisfaction_level))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
g2 = ggplot(dataLeft, aes(x=last_evaluation))+ geom_histogram(aes(y=..density..), fill="green", colour="black") + geom_density(colour="red")
g3 = ggplot(dataLeft, aes(x=average_montly_hours))+ geom_histogram(aes(y=..density..), fill="yellow", colour="black") + geom_density(colour="red")
g4 = ggplot(dataLeft, aes(x = salary,fill = salary)) + geom_bar(stat="count") + geom_text(stat='count', aes(label=..count..), vjust=-0.5)
grid.arrange(g1,g2,g3,g4,nrow = 2) #Los pongo en modo matriz
#Primero hacemos un filtro de aquellos empleados que la empresa considera valiosos dadas ciertas condiciones, entre los que se van, es decir, utilizando el dataLeft
#Tendremos en cuenta las condiciones que se comentan despu칠s de lastevaluation>=0.7, timespendcompany>=4 y numberproject>=5
empleadosvaliososquesevan<-dataLeft[dataLeft$last_evaluation>=0.7 & dataLeft$time_spend_company>=4 & dataLeft$number_project>=5,]
nrow(empleadosvaliososquesevan)
#Entre estos cogemos las variables numericas para la matriz de correlacones
empleadosvaliososnumeric<-empleadosvaliososquesevan[,c('satisfaction_level','last_evaluation','number_project','average_montly_hours','time_spend_company')]
g1 = ggplot(empleadosvaliososquesevan, aes(x=satisfaction_level))+ geom_histogram(aes(y=..density..), fill="blue", colour="black") + geom_density(colour="red")
g2 = ggplot(empleadosvaliososquesevan, aes(x=last_evaluation))+ geom_histogram(aes(y=..density..), fill="green", colour="black") + geom_density(colour="red")
g3 = ggplot(empleadosvaliososquesevan, aes(x=average_montly_hours))+ geom_histogram(aes(y=..density..), fill="yellow", colour="black") + geom_density(colour="red")
g4 = ggplot(empleadosvaliososquesevan, aes(x = salary,fill = salary)) + geom_bar(stat="count") + geom_text(stat='count', aes(label=..count..), vjust=-0.5)
grid.arrange(g1,g2,g3,g4,nrow = 2) #Los pongo en modo matriz
correlacionnumericosvaliosos<-round(cor(empleadosvaliososnumeric), 1)
library(corrplot)
corrplot(correlacionnumericosvaliosos, method="number", type="lower")
#Preparamos el dataset y como ya esta en factor lo dejamos as칤
empleadosvaliosos<-dataRRHH[dataRRHH$last_evaluation>=0.7 & dataRRHH$time_spend_company>=4 & dataRRHH$number_project>=5,]
head(empleadosvaliosos)
nrow(empleadosvaliosos)
ggplot(empleadosvaliosos, aes(x=empleadosvaliosos$left, color=empleadosvaliosos$left))+
geom_bar(stat="count", aes (fill=empleadosvaliosos$left))+
xlab("Se va o Se queda") + ylab("Contador")+
geom_text(stat='count', aes(label=..count..), vjust=-0.5)
#Esto debemos de tenerlo en cuenta a la hora de elegir, por las limitaciones de la m칠trica accuracy
set.seed(100)  # Para reproducir los mismos resultados
IndicesEntrenamiento <- createDataPartition(y = empleadosvaliosos$left,
p = 0.75,
list = FALSE)
Entrenamiento <- empleadosvaliosos[IndicesEntrenamiento,]
Test <- empleadosvaliosos[-IndicesEntrenamiento,]
nrow(Entrenamiento)
nrow(Test)
#Hay que tener cuidado con lo que ya comentabamos antes de que las clases est치n desequilibradas (con el accuracy, ya que es una de sus limitaciones)
# Porcentajes en el dataset original de cada una de las clases
prop.table(table(empleadosvaliosos$left))
#Numero de elementos de cada clase en el dataset de entrenamiento
table(Entrenamiento$left)
prop.table(table(Entrenamiento$left))
#Numero de elementos de cada clase en el dataset de test
table(Test$left)
prop.table(table(Test$left))
#Vemos que la distribuci칩n de la variable respuesta es aproximadamente la misma en el conjunto de entrenamiento y en el de testeo
modeloTrees<-train(left ~ . ,data =Entrenamiento, method="rpart")
modeloTrees
rpart.plot(modeloTrees$finalModel, main="Classification Tree2")
## El zoo de las binomiales.
probabilidades = dbinom(x = 0:12, size = 10, prob = 2/3)
## El zoo de las binomiales.
probabilidades = dbinom(x = 0:12, size = 12, prob = 2/3)
#Calculo todas las probabilidades que puede tomar esa varible aleatoria binomial
bp = barplot(probabilidades, space = 0, col="tan", names.arg = 0:12)
## Binomiales con $n$ grande y $p$ moderado.
probabilidades = dbinom(x = 0:100, size = 100, prob = 1/3)
bp = barplot(probabilidades, space = 0, col="tan", names.arg = 0:100)
probabilidades = dbinom(x = 0:400, size = 400, prob = 1/3)
bp = barplot(probabilidades, space = 0, col="tan", names.arg = 0:100)
## Binomiales con $n$ grande y $p$ moderado.
probabilidades = dbinom(x = 0:100, size = 100, prob = 1/3)
bp = barplot(probabilidades, space = 0, col="tan", names.arg = 0:100)
knitr::opts_chunk$set(echo = TRUE)
head(diamonds)
(who_TABLE1=who_Ejer %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)))
(who_Ejer=who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = "key",
values_to = "cases",
values_drop_na = TRUE
) %>%
mutate(
key = stringr::str_replace(key, "newrel", "new_rel")
) %>%
separate(key, c("new", "var", "sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex", "age"), sep = 1))
library(tidyverse)
(who_Ejer=who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = "key",
values_to = "cases",
values_drop_na = TRUE
) %>%
mutate(
key = stringr::str_replace(key, "newrel", "new_rel")
) %>%
separate(key, c("new", "var", "sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex", "age"), sep = 1))
(who_TABLE1=who_Ejer %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)))
(who_TABLE=who_Ejer %>%
group_by(country, year, sex) %>%
summarise(cases = sum(cases)))
install.packages("shiny")
library(tidyverse)
View(mayorque05)
View(modeloJerarquico)
setwd("F:/MASTER_BIGDATA/FundamentosMatematicos/A2")
knitr::opts_chunk$set(echo = TRUE)
min(who_TABLE$year)
(who_TABLE=who_Ejer %>%
group_by(country, year, sex) %>%
summarise(cases = sum(cases)))
(who_Ejer=who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = "key",
values_to = "cases",
values_drop_na = TRUE
) %>%
mutate(
key = stringr::str_replace(key, "newrel", "new_rel")
) %>%
separate(key, c("new", "var", "sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex", "age"), sep = 1))
library(tidyverse)
(who_Ejer=who %>%
pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = "key",
values_to = "cases",
values_drop_na = TRUE
) %>%
mutate(
key = stringr::str_replace(key, "newrel", "new_rel")
) %>%
separate(key, c("new", "var", "sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex", "age"), sep = 1))
(who_TABLE=who_Ejer %>%
group_by(country, year, sex) %>%
summarise(cases = sum(cases)))
who_TABLE  %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
geom_line()
(who_TABLE1=who %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)))
(who_TABLE1=who %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)))
(who_TABLE1=who_Ejer %>%
group_by(country, year, sex) %>%
filter(year > 1995) %>%
summarise(cases = sum(cases)))
who_TABLE1  %>%
unite(country_sex, country, sex, remove = FALSE) %>%
ggplot(aes(x = year, y = cases, group = country_sex, colour = country)) +
geom_line()
